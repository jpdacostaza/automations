blueprint:
  name: Motion-Controlled Light with Optional Conditions
  description: >
    A smart light automation with motion, lux threshold, cutoff time, and auto-off — all optional.
  domain: automation
  input:
    target_switch:
      name: Switch or Light Entity
      selector:
        entity:
          domain: input_boolean

    motion_sensor:
      name: Motion Sensor
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    use_motion:
      name: Enable Motion Trigger
      default: true
      selector:
        boolean:

    illuminance_sensor:
      name: Illuminance Sensor
      selector:
        entity:
          domain: sensor
          device_class: illuminance
    use_lux:
      name: Use Lux Threshold
      default: true
      selector:
        boolean:
    lux_threshold:
      name: Lux Threshold
      default: 30
      selector:
        number:
          min: 0
          max: 1000
          step: 1
          unit_of_measurement: lx

    use_off_delay:
      name: Enable Auto-Off After No Motion
      default: true
      selector:
        boolean:
    off_delay:
      name: No Motion Off Delay (Minutes)
      default: 5
      selector:
        number:
          min: 1
          max: 60
          step: 1
          unit_of_measurement: minutes

    use_cutoff:
      name: Enable Cutoff Time
      default: true
      selector:
        boolean:
    cutoff_time:
      name: Cutoff Time
      default: "23:00:00"
      selector:
        time:

mode: queued
max: 5

trigger:
  - platform: state
    entity_id: !input motion_sensor
    from: "off"
    to: "on"
    enabled: !input use_motion

  - platform: state
    entity_id: !input motion_sensor
    from: "on"
    to: "off"
    for:
      minutes: !input off_delay
    enabled: !input use_off_delay

  - platform: time
    at: !input cutoff_time
    enabled: !input use_cutoff

condition: []

action:
  - choose:
      # Motion detected → check lux and cutoff before turning ON
      - conditions:
          - condition: template
            value_template: "{{ not (use_lux and states(illuminance_sensor) | float > lux_threshold | float) }}"
          - condition: template
            value_template: "{{ not (use_cutoff and now().strftime('%H:%M:%S') > cutoff_time) }}"
          - condition: state
            entity_id: !input target_switch
            state: "off"
        sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: !input target_switch

      # No motion + auto-off enabled + light is on
      - conditions:
          - condition: state
            entity_id: !input target_switch
            state: "on"
          - condition: template
            value_template: "{{ use_off_delay }}"
        sequence:
          - service: input_boolean.turn_off
            target:
              entity_id: !input target_switch

      # Cutoff time hit + cutoff enabled + light is on
      - conditions:
          - condition: template
            value_template: "{{ use_cutoff }}"
          - condition: state
            entity_id: !input target_switch
            state: "on"
        sequence:
          - service: input_boolean.turn_off
            target:
              entity_id: !input target_switch
